{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract_component.js","webpack:///./src/components/board.js","webpack:///./src/components/edit-task.js","webpack:///./src/components/filters.js","webpack:///./src/components/load-button.js","webpack:///./src/components/menu.js","webpack:///./src/components/no-task.js","webpack:///./src/components/sort.js","webpack:///./src/components/task-card.js","webpack:///./src/components/tasks.js","webpack:///./src/const.js","webpack:///./src/controllers/board.js","webpack:///./src/main.js","webpack:///./src/mock/filter.js","webpack:///./src/mock/task.js","webpack:///./src/utils/common.js","webpack:///./src/utils/render.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA8C;;;AAG/B;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,mEAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEe,oBAAoB,2DAAiB;AACpD;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACR;AACU;;AAErD;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,IAAI,GAAG,MAAM;AAClC;AACA,iBAAiB,IAAI;AACrB,UAAU;AACV;AACA,sDAAsD,IAAI,GAAG,MAAM;AACnE,WAAW,IAAI;AACf;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM,GAAG,MAAM;AACnC,sDAAsD,MAAM;AAC5D;AACA,iBAAiB,MAAM;AACvB,UAAU;AACV;AACA;AACA,qBAAqB,MAAM,GAAG,MAAM;AACpC,0CAA0C,MAAM;AAChD;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA,SAAS,2CAA2C;;AAEpD,0CAA0C,6CAAM;AAChD,wDAAwD,2CAAI;;AAE5D;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,kDAAW,qBAAqB;AACvF,+BAA+B,gEAAU;;;AAGzC;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM,GAAG,YAAY,GAAG,cAAc;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B;AACvF;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK,GAAG,KAAK;AAC5C;AACA;AACA;;AAEA;AACA,6DAA6D,+BAA+B;AAC5F;;AAEA,kBAAkB;AAClB;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,2DAAiB;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAqD;;;AAGrD;AACA,SAAS,aAAa;AACtB;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA,0BAA0B,MAAM,2BAA2B,MAAM,wBAAwB,MAAM,WAAW,MAAM;AAChH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEe,qBAAqB,2DAAiB;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAqD;;;AAGrD;AACA;AACA;AACA;AACA;;AAEe,yBAAyB,2DAAiB;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qBAAqB,2DAAiB;AACrD;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACM;AACU;;AAErD;AACA,SAAS,kEAAkE;;AAE3E;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,kDAAW,qBAAqB;AACvF,+BAA+B,gEAAU;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,MAAM,GAAG,YAAY,GAAG,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2BAA2B;AACrG;AACA;AACA;AACA;AACA,wDAAwD,4BAA4B;AACpF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,YAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAwD;;AAExD;AACA;AACA;AACA;AACA;;;AAGe,oBAAoB,8DAAiB;AACpD;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkD;;;;;;;;;;;;;ACpBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACzB;AACK;AACY;AACR;AACC;AACL;;AAEpD;AACA;;AAEA;AACA,iCAAiC,6DAAkB;AACnD,gCAAgC,6DAAiB;;AAEjD;AACA,IAAI,6DAAO;AACX;;AAEA;AACA,IAAI,6DAAO;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,4DAAM,sCAAsC,4DAAc;AAC5D;;AAEe;AACf;AACA;;AAEA,gCAAgC,2DAAe;AAC/C,8BAA8B,wDAAa;AAC3C,+BAA+B,4DAAc;AAC7C,wCAAwC,+DAAuB;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,4DAAM,wCAAwC,4DAAc;AAClE;AACA;;AAEA,IAAI,4DAAM,sCAAsC,4DAAc;AAC9D,IAAI,4DAAM,uCAAuC,4DAAc;;AAE/D;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI,4DAAM,0CAA0C,4DAAc;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,QAAQ,4DAAM;AACd;AACA,KAAK;;AAEL;;AAEA;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACG;AACL;;AAET;AACI;AACa;AACJ;;;AAGlD;AACA;;AAEA,4DAAM,kBAAkB,wDAAa,IAAI,4DAAc;AACvD,4DAAM,WAAW,2DAAe,CAAC,uDAAU,GAAG,4DAAc;;AAE5D,2BAA2B,yDAAc;AACzC,4BAA4B,0DAAe;;AAE3C,4DAAM,uBAAuB,4DAAc;AAC3C,uBAAuB,mDAAQ;;;;;;;;;;;;;ACpB/B;AAAA;AAAA;AAAA;AAAgC;AACO;;AAEvC,sBAAsB,8CAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC,SAAS,8CAA8C;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO,kCAAkC,oDAAa;;;;;;;;;;;;;;ACrCtD;AAAA;AAAA;AAAA;AAAsG;AACtE;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sEAAgB,YAAY,mEAAa;;AAE3D;AACA,WAAW,mEAAa,CAAC,6CAAM;AAC/B,iBAAiB,mEAAa;AAC9B,eAAe,sEAAgB;AAC/B,gBAAgB,sEAAgB;AAChC;AACA,oDAAoD,2EAAqB;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;;;;;;;;;;;;;;;AC3CP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAA0B,MAAM;AAChC;;AAEA;AACA;AACA;;AAEA,YAAY,MAAM,GAAG,QAAQ;AAC7B;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,yBAAyB;AACzB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AASE;;;;;;;;;;;;;;ACnDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from \"../utils/render\";\r\n\r\n\r\nexport default class AbstractComponent {\r\n  constructor() {\r\n    if (new.target === AbstractComponent) {\r\n      throw new Error(`Can't instantiate AbstractComponent, only concrete one.`);\r\n    }\r\n\r\n    this._element = null;\r\n  }\r\n\r\n  getTemplate() {\r\n    throw new Error(`Abstract method not implemented: getTemplate`);\r\n  }\r\n\r\n  getElement() {\r\n    if (!this._element) {\r\n      this._element = createElement(this.getTemplate());\r\n    }\r\n\r\n    return this._element;\r\n  }\r\n\r\n  removeElement() {\r\n    this._element = null;\r\n  }\r\n\r\n}\r\n","import AbstractComponent from \"./abstract_component\";\n\nconst createBoardTemplate = () => {\n  return (\n    `<section class=\"board container\">  \n    </section>`\n  );\n};\n\nexport default class Board extends AbstractComponent {\n  getTemplate() {\n    return createBoardTemplate();\n  }\n}\n\n","import {MONTH_NAMES, COLORS, DAYS} from '../const';\nimport {formatTime} from '../utils/common';\nimport AbstractComponent from \"./abstract_component\";\n\nconst createRepeatingDaysMarkup = (days, repeatingDays) => {\n  return days.map((day, index) => {\n    const isChecked = repeatingDays[day];\n\n    return `<input\n        class=\"visually-hidden card__repeat-day-input\"\n        type=\"checkbox\"\n        id=\"repeat-${day}-${index}\"\n        name=\"repeat\"\n        value=\"${day}\"\n        ${isChecked ? `checked` : ``}\n        />\n        <label class=\"card__repeat-day\" for=\"repeat-${day}-${index}\"\n        >${day}</label\n      >`;\n  }).join(`\\n`);\n};\n\nconst createColorsMarkup = (colors, currentColor) => {\n  return colors.map((color, index) => {\n    return (\n      `<input\n        type=\"radio\"\n        id=\"color-${color}-${index}\"\n        class=\"card__color-input card__color-input--${color} visually-hidden\"\n        name=\"color\"\n        value=\"${color}\"\n        ${currentColor === color ? `checked` : ``}\n      />\n      <label\n        for=\"color-${color}-${index}\"\n        class=\"card__color card__color--${color}\"\n        >black</label\n      >`\n    );\n  }).join(`\\n`);\n};\n\n\nconst createAddTaskTemplate = (taskData) => {\n  const {color, description, dueDate, repeatingDays} = taskData;\n\n  const colorsMarkup = createColorsMarkup(COLORS, color);\n  const repeatingDaysMarkup = createRepeatingDaysMarkup(DAYS, repeatingDays);\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n\n  const isRepeatingTask = Object.values(repeatingDays).some(Boolean);\n  const repeatClass = isRepeatingTask ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  return (\n    `<article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <label>\n              <textarea\n                class=\"card__text\"\n                placeholder=\"Start typing your text here...\"\n                name=\"text\"\n              >${description}</textarea>\n            </label>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <button class=\"card__date-deadline-toggle\" type=\"button\">\n                  date: <span class=\"card__date-status\">${isDateShowing ? `yes` : `no`}</span>\n                </button>\n                \n                ${isDateShowing ? `<fieldset class=\"card__date-deadline\">\n                  <label class=\"card__input-deadline-wrap\">\n                    <input\n                      class=\"card__date\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"date\"\n                      value=\"${date} ${time}\"\n                    />\n                  </label>\n                </fieldset>` : ``}\n\n                <button class=\"card__repeat-toggle\" type=\"button\">\n                  repeat:<span class=\"card__repeat-status\">${isRepeatingTask ? `yes` : `no`}</span>\n                </button>\n\n                ${isRepeatingTask ? `<fieldset class=\"card__repeat-days\">\n                  <div class=\"card__repeat-days-inner\">\n                    ${repeatingDaysMarkup}\n                  </div>\n                </fieldset>` : ``}\n\n              </div>\n            </div>\n\n            <div class=\"card__colors-inner\">\n              <h3 class=\"card__colors-title\">Color</h3>\n              <div class=\"card__colors-wrap\">\n                ${colorsMarkup}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card__status-btns\">\n            <button class=\"card__save\" type=\"submit\">save</button>\n            <button class=\"card__delete\" type=\"button\">delete</button>\n          </div>\n        </div>\n      </form>\n    </article>`\n  );\n};\n\nexport default class TaskEdit extends AbstractComponent {\n  constructor(taskEdit) {\n    super();\n\n    this._taskEdit = taskEdit;\n  }\n\n  getTemplate() {\n    return createAddTaskTemplate(this._taskEdit);\n  }\n\n  setSubmitHandler(handler) {\n    this.getElement().querySelector(`form`).addEventListener(`submit`, handler);\n  }\n\n}\n","import AbstractComponent from \"./abstract_component\";\n\n\nconst renderFilterMurkup = (filters, isChecked) => {\n  const {title, count} = filters;\n  return (\n    `<input type=\"radio\" id=\"filter__${title}\"\n    class=\"filter__input visually-hidden\"\n    name=\"filter\"\n    ${isChecked ? `checked` : ``}\n    ${count === 0 ? `disabled` : ``}\n    />\n    <label for=\"filter__${title}\" class=\"filter__label\"> ${title} <span class=\"filter__${title}-count\"> ${count} </span></label\n    >`\n  );\n};\n\nconst createMainFiltersTemplate = (filterData) => {\n  const filtersMarkup = filterData.map((it, i) => {\n    return renderFilterMurkup(it, i === 0);\n  }).join(`\\n`);\n\n  return (\n    `<section class=\"main__filter filter container\">\n        ${filtersMarkup}\n    </section>`\n  );\n};\n\nexport default class Filter extends AbstractComponent {\n  constructor(filters) {\n    super();\n\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return createMainFiltersTemplate(this._filters);\n  }\n\n}\n\n","import AbstractComponent from \"./abstract_component\";\n\n\nconst createLoadButton = () => {\n  return (\n    `<button class=\"load-more\" type=\"button\">load more</button>`\n  );\n};\n\nexport default class LoadButton extends AbstractComponent {\n  getTemplate() {\n    return createLoadButton();\n  }\n\n  setClickHandler(hendler) {\n    this.getElement().addEventListener(`click`, hendler);\n  }\n\n}\n\n\n","import AbstractComponent from \"./abstract_component\";\n\nconst createMenuTemplate = () => {\n  return (\n    `<section class=\"control__btn-wrap\">\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__new-task\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n            >+ ADD NEW TASK</label\n          >\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__task\"\n            class=\"control__input visually-hidden\"\n            checked\n          />\n          <label for=\"control__task\" class=\"control__label\">TASKS</label>\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__statistic\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__statistic\" class=\"control__label\"\n            >STATISTICS</label\n          >\n    </section>`\n  );\n};\n\n\nexport default class Menu extends AbstractComponent {\n  getTemplate() {\n    return createMenuTemplate();\n  }\n}\n","import AbstractComponent from \"./abstract_component\";\n\nconst createNoTaskTemplate = () => {\n  return (\n    `<section class=\"board container\">\n      <p class=\"board__no-tasks\">\n        Click «ADD NEW TASK» in menu to create your first task\n      </p>\n    </section>`\n  );\n};\n\nexport default class NoTask extends AbstractComponent {\n  getTemplate() {\n    return createNoTaskTemplate();\n  }\n}\n","import AbstractComponent from \"./abstract_component\";\n\nconst createSortTemplate = () => {\n  return (\n    `<div class=\"board__filter-list\">\n    <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n    <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n    <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n  </div>`\n  );\n};\n\nexport default class Menu extends AbstractComponent {\n  getTemplate() {\n    return createSortTemplate();\n  }\n}\n","import {MONTH_NAMES} from '../const';\nimport {formatTime} from '../utils/common';\nimport AbstractComponent from \"./abstract_component\";\n\nconst createTaskCardTemplate = (taskData) => {\n  const {color, description, isArchive, isFavorite, dueDate, repeatingDays} = taskData;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const archiveButtonInactiveClass = isArchive ? `` : `card__btn--disabled`;\n  const favoriteButtonInactiveClass = isFavorite ? `` : `card__btn--disabled`;\n\n  const repeatClass = Object.values(repeatingDays).some(Boolean) ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  return (\n    `<article class=\"card card--${color} ${repeatClass} ${deadlineClass}\">\n        <div class=\"card__form\">\n          <div class=\"card__inner\">\n            <div class=\"card__control\">\n              <button type=\"button\" class=\"card__btn card__btn--edit\">\n                edit\n              </button>\n              <button type=\"button\" class=\"card__btn card__btn--archive ${archiveButtonInactiveClass}\">\n                archive\n              </button>\n              <button\n                type=\"button\"\n                class=\"card__btn card__btn--favorites ${favoriteButtonInactiveClass}\"\n              >\n                favorites\n              </button>\n            </div>\n\n            <div class=\"card__color-bar\">\n              <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                <use xlink:href=\"#wave\"></use>\n              </svg>\n            </div>\n\n            <div class=\"card__textarea-wrap\">\n              <p class=\"card__text\">${description}.</p>\n            </div>\n\n            <div class=\"card__settings\">\n              <div class=\"card__details\">\n                <div class=\"card__dates\">\n                  <div class=\"card__date-deadline\">\n                    <p class=\"card__input-deadline-wrap\">\n                      <span class=\"card__date\">${date}</span>\n                      <span class=\"card__time\">${time}</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </article>`\n  );\n};\n\nexport default class Task extends AbstractComponent {\n  constructor(task) {\n    super();\n\n    this._task = task;\n  }\n\n  getTemplate() {\n    return createTaskCardTemplate(this._task);\n  }\n\n  setEditButtonClickHandler(handler) {\n    this.getElement().querySelector(`.card__btn--edit`).addEventListener(`click`, handler);\n  }\n\n}\n","import AbstractComponent from \"./abstract_component.js\";\n\nconst createTasksTemplate = () => {\n  return (\n    `<div class=\"board__tasks\"></div>`\n  );\n};\n\n\nexport default class Tasks extends AbstractComponent {\n  getTemplate() {\n    return createTasksTemplate();\n  }\n}\n","const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];\nconst DAYS = [`mo`, `tu`, `we`, `th`, `fr`, `sa`, `su`];\nconst FILTRT_TITLES = [`all`, `overdue`, `today`, `favorites`, `repeating`, `archive`];\n\n\nconst MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n\nexport {COLORS, DAYS, FILTRT_TITLES, MONTH_NAMES};\n","import {render, RenderPosition, replace, remove} from \"../utils/render\";\r\nimport SortComponent from \"../components/sort\";\r\nimport NoTaskComponent from \"../components/no-task\";\r\nimport LoadMoreButtonComponent from \"../components/load-button\";\r\nimport TaskEditComponent from \"../components/edit-task\";\r\nimport TasksCardComponent from \"../components/task-card\";\r\nimport TasksComponent from \"../components/tasks.js\";\r\n\r\nconst SHOWING_TASKS_COUNT_ON_START = 8;\r\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 8;\r\n\r\nconst renderTask = (taskListElement, task) => {\r\n  const tasksCardComponent = new TasksCardComponent(task);\r\n  const taskEditComponent = new TaskEditComponent(task);\r\n\r\n  const replaceTaskToEdit = () => {\r\n    replace(taskEditComponent, tasksCardComponent);\r\n  };\r\n\r\n  const replaceEditToTask = () => {\r\n    replace(tasksCardComponent, taskEditComponent);\r\n  };\r\n\r\n  const onEscKeyDown = (evt) => {\r\n    const isEscKey = evt.key === `Escape` || evt.key === `Esc`;\r\n    if (isEscKey) {\r\n      replaceEditToTask();\r\n      document.removeEventListener(`keydown`, onEscKeyDown);\r\n    }\r\n  };\r\n\r\n  tasksCardComponent.setEditButtonClickHandler(() => {\r\n    replaceTaskToEdit();\r\n    document.addEventListener(`keydown`, onEscKeyDown);\r\n  });\r\n\r\n  taskEditComponent.setSubmitHandler((evt) => {\r\n    evt.preventDefault();\r\n    replaceEditToTask();\r\n    document.removeEventListener(`keydown`, onEscKeyDown);\r\n  });\r\n\r\n  render(taskListElement, tasksCardComponent, RenderPosition.BEFOREEND);\r\n};\r\n\r\nexport default class BoardController {\r\n  constructor(container) {\r\n    this._container = container;\r\n\r\n    this._noTaskComponent = new NoTaskComponent();\r\n    this._sortComponent = new SortComponent();\r\n    this._tasksComponent = new TasksComponent();\r\n    this._loadMoreButtonComponent = new LoadMoreButtonComponent();\r\n  }\r\n\r\n  render(tasks) {\r\n    const isAllTasksArchived = tasks.every((it) => it.isArchive);\r\n    const boardComponent = this._container.getElement();\r\n\r\n    if (isAllTasksArchived) {\r\n      render(boardComponent, this._noTaskComponent, RenderPosition.BEFOREEND);\r\n      return;\r\n    }\r\n\r\n    render(boardComponent, this._sortComponent, RenderPosition.BEFOREEND);\r\n    render(boardComponent, this._tasksComponent, RenderPosition.BEFOREEND);\r\n\r\n    const taskListElement = boardComponent.querySelector(`.board__tasks`);\r\n    let showingTasksCount = SHOWING_TASKS_COUNT_ON_START;\r\n\r\n    tasks.slice(0, showingTasksCount)\r\n    .forEach((task) => {\r\n      renderTask(taskListElement, task);\r\n    });\r\n\r\n    const loadMoreButtonComponent = this._loadMoreButtonComponent;\r\n    render(boardComponent, loadMoreButtonComponent, RenderPosition.BEFOREEND);\r\n\r\n    loadMoreButtonComponent.setClickHandler(() => {\r\n      const prevShowElement = showingTasksCount;\r\n      showingTasksCount = prevShowElement + SHOWING_TASKS_COUNT_BY_BUTTON;\r\n\r\n      tasks.slice(prevShowElement, showingTasksCount)\r\n      .forEach((it) => {\r\n        renderTask(taskListElement, it);\r\n      });\r\n\r\n      if (showingTasksCount >= tasks.length) {\r\n        remove(loadMoreButtonComponent);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import BoardComponent from \"./components/board\";\nimport FilterComponent from \"./components/filters\";\nimport MenuComponent from \"./components/menu\";\n\nimport {taskData} from \"./mock/task\";\nimport {filterMock} from \"./mock/filter\";\nimport {render, RenderPosition} from \"./utils/render\";\nimport BoardController from \"./controllers/board\";\n\n\nconst main = document.querySelector(`.main`);\nconst mainControl = main.querySelector(`.main__control`);\n\nrender(mainControl, new MenuComponent(), RenderPosition.BEFOREEND);\nrender(main, new FilterComponent(filterMock), RenderPosition.BEFOREEND);\n\nconst boardComponent = new BoardComponent();\nconst boardController = new BoardController(boardComponent);\n\nrender(main, boardComponent, RenderPosition.BEFOREEND);\nboardController.render(taskData);\n","import {taskData} from \"./task\";\nimport {FILTRT_TITLES} from \"../const\";\n\nconst taskDataCards = taskData.slice(1);\n\nconst counterFilters = {\n  all: taskDataCards.length,\n  overdue: 0,\n  today: 0,\n  favorites: 0,\n  repeating: 0,\n  archive: 0\n};\n\nfor (let i = 0; i < taskDataCards.length; i++) {\n  const {isArchive, isFavorite, dueDate, repeatingDays} = taskDataCards[i];\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isToday = dueDate instanceof Date && dueDate.getDate() === new Date().getDate();\n  const isRepeat = Object.values(repeatingDays).some(Boolean);\n\n  counterFilters.overdue += isExpired ? 1 : 0;\n  counterFilters.today += isToday ? 1 : 0;\n  counterFilters.favorites += isFavorite ? 1 : 0;\n  counterFilters.repeating += isRepeat ? 1 : 0;\n  counterFilters.archive += isArchive ? 1 : 0;\n}\n\nconst renderMockData = (filters) => {\n  return filters.map((it) => {\n    return {\n      title: it,\n      count: counterFilters[it]\n    };\n  });\n};\n\nexport const filterMock = renderMockData(FILTRT_TITLES);\n\n","import {getRandomItem, getRandomBoolean, generateRepeatingDays, getRandomDate} from \"../utils/common\";\nimport {COLORS} from \"../const\";\n\nconst TASK_COUNT = 22;\n\nconst DefaultRepeatingDays = {\n  \"mo\": false,\n  \"tu\": false,\n  \"we\": false,\n  \"th\": false,\n  \"fr\": false,\n  \"sa\": false,\n  \"su\": false,\n};\n\nconst PropertyDefaultRepeatingDays = Object.keys(DefaultRepeatingDays);\n\nconst DescriptionItems = [\n  `Изучить теорию`,\n  `Сделать домашку`,\n  `Пройти интенсив на соточку`,\n];\n\nconst generateMock = () => {\n  const dueDate = getRandomBoolean() ? null : getRandomDate();\n\n  return {\n    color: getRandomItem(COLORS),\n    description: getRandomItem(DescriptionItems),\n    isArchive: getRandomBoolean(),\n    isFavorite: getRandomBoolean(),\n    dueDate,\n    repeatingDays: dueDate ? DefaultRepeatingDays : generateRepeatingDays(PropertyDefaultRepeatingDays),\n\n  };\n};\n\nconst renderTaskData = (countTask) => {\n  return new Array(countTask)\n    .fill()\n    .map(generateMock);\n};\n\nexport const taskData = renderTaskData(TASK_COUNT);\n\n\n","const castTimeFormat = (value) => {\n  return value < 10 ? `0${value}` : String(value);\n};\n\nconst formatTime = (date) => {\n  const hours = castTimeFormat(date.getHours());\n  const minutes = castTimeFormat(date.getMinutes());\n\n  return `${hours}:${minutes}`;\n};\n\n\nconst getRandomNumber = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomItem = (arr) => {\n  return arr[getRandomNumber(0, arr.length - 1)];\n};\n\nconst getRandomBoolean = () => Math.random() > 0.5;\n\nconst generateRepeatingDays = (arrValues) => {\n  const randomDay = getRandomItem(arrValues);\n\n  return Object.assign({}, arrValues, {\n    [randomDay]: getRandomBoolean(),\n  });\n};\n\nconst getRandomDate = () => {\n  const targetDate = new Date();\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const diffValue = sign * getRandomNumber(0, 7);\n\n  targetDate.setDate(targetDate.getDate() + diffValue);\n  targetDate.setHours(getRandomNumber(0, 23), getRandomNumber(0, 59));\n\n  return targetDate;\n};\n\nexport {\n  formatTime,\n  getRandomNumber,\n  getRandomItem,\n  getRandomBoolean,\n  generateRepeatingDays,\n  getRandomDate,\n};\n\n","export const RenderPosition = {\r\n  AFTERBEGIN: `afterbegin`,\r\n  BEFOREEND: `beforeend`\r\n};\r\n\r\nexport const createElement = (template) => {\r\n  const newElement = document.createElement(`div`);\r\n  newElement.innerHTML = template;\r\n\r\n  return newElement.firstChild;\r\n};\r\n\r\nexport const render = (container, component, place) => {\r\n  switch (place) {\r\n    case RenderPosition.AFTERBEGIN:\r\n      container.prepend(component.getElement());\r\n      break;\r\n\r\n    case RenderPosition.BEFOREEND:\r\n      container.append(component.getElement());\r\n      break;\r\n  }\r\n};\r\n\r\nexport const replace = (newComponent, oldComponent) => {\r\n  const parent = oldComponent.getElement().parentElement;\r\n  const newElement = newComponent.getElement();\r\n  const oldElement = oldComponent.getElement();\r\n\r\n  const isExistElement = !!(parent && newElement && oldElement);\r\n\r\n  if (isExistElement && parent.contains(oldElement)) {\r\n    parent.replaceChild(newElement, oldElement);\r\n  }\r\n};\r\n\r\nexport const remove = (component) => {\r\n  component.getElement().remove();\r\n  component.removeElement();\r\n};\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/addTask.js","webpack:///./src/components/board.js","webpack:///./src/components/filters.js","webpack:///./src/components/loadButton.js","webpack:///./src/components/menu.js","webpack:///./src/components/taskCard.js","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/filter.js","webpack:///./src/mock/task.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAqC;AACD;AACN;AACE;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,IAAI,GAAG,MAAM;AAClC;AACA,iBAAiB,IAAI;AACrB,UAAU;AACV;AACA,sDAAsD,IAAI,GAAG,MAAM;AACnE,WAAW,IAAI;AACf;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM,GAAG,MAAM;AACnC,sDAAsD,MAAM;AAC5D;AACA,iBAAiB,MAAM;AACvB,UAAU;AACV;AACA;AACA,qBAAqB,MAAM,GAAG,MAAM;AACpC,0CAA0C,MAAM;AAChD;AACA;AACA;AACA,GAAG;AACH;;;AAGO;AACP,SAAS,2CAA2C;;AAEpD,0CAA0C,6CAAM;AAChD,wDAAwD,2CAAI;;AAE5D;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,kDAAW,qBAAqB;AACvF,+BAA+B,yDAAU;;;AAGzC;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM,GAAG,YAAY,GAAG,cAAc;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B;AACvF;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK,GAAG,KAAK;AAC5C;AACA;AACA;;AAEA;AACA,6DAA6D,+BAA+B;AAC5F;;AAEA,kBAAkB;AAClB;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjIA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AACA,SAAS,aAAa;AACtB;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA,0BAA0B,MAAM,2BAA2B,MAAM,wBAAwB,MAAM,WAAW,MAAM;AAChH;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAqC;AACD;;AAE7B;AACP,SAAS,kEAAkE;;AAE3E;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,kDAAW,qBAAqB;AACvF,+BAA+B,yDAAU;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,MAAM,GAAG,YAAY,GAAG,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,2BAA2B;AACrG;AACA;AACA;AACA;AACA,wDAAwD,4BAA4B;AACpF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,YAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAO;AACA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACfqD;AACU;AACR;AACI;AACE;AACJ;AAChB;AACJ;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,2EAAkB;AAC7C,oBAAoB,qFAAyB,CAAC,uDAAU;AACxD,oBAAoB,6EAAmB;;AAEvC;AACA;;AAEA,0BAA0B,iFAAqB,CAAC,mDAAQ;;AAExD;;;AAGA,mDAAQ;AACR,6CAA6C,mFAAsB;;AAEnE,qBAAqB,+EAAgB;;AAErC;;AAEA;AACA;AACA;;AAEA,EAAE,mDAAQ;AACV,+CAA+C,mFAAsB;;AAErE,2BAA2B,mDAAQ;AACnC;AACA;AACA,CAAC;;;;;;;;;;;;;ACjDD;AAAA;AAAA;AAAgC;;AAEhC;;AAEA,sBAAsB,8CAAQ;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC,SAAS,8CAA8C;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;;;;;;;;;;;;;;ACvCP;AAAA;AAAA;AAAA;;AAEgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,yBAAyB;AACzB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,yBAAyB,6CAAM;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;;;;;;;;;;;;;;;AC3EP;AAAA;AAAA;AACA,0BAA0B,MAAM;AAChC;;AAEO;AACP;AACA;;AAEA,YAAY,MAAM,GAAG,QAAQ;AAC7B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {MONTH_NAMES} from '../const';\nimport {formatTime} from '../utils';\nimport {DAYS} from '../const';\nimport {COLORS} from '../const';\n\nconst createRepeatingDaysMarkup = (days, repeatingDays) => {\n  return days.map((day, index) => {\n    const isChecked = repeatingDays[day];\n\n    return `<input\n        class=\"visually-hidden card__repeat-day-input\"\n        type=\"checkbox\"\n        id=\"repeat-${day}-${index}\"\n        name=\"repeat\"\n        value=\"${day}\"\n        ${isChecked ? `checked` : ``}\n        />\n        <label class=\"card__repeat-day\" for=\"repeat-${day}-${index}\"\n        >${day}</label\n      >`;\n  }).join(`\\n`);\n};\n\nconst createColorsMarkup = (colors, currentColor) => {\n  return colors.map((color, index) => {\n    return (\n      `<input\n        type=\"radio\"\n        id=\"color-${color}-${index}\"\n        class=\"card__color-input card__color-input--${color} visually-hidden\"\n        name=\"color\"\n        value=\"${color}\"\n        ${currentColor === color ? `checked` : ``}\n      />\n      <label\n        for=\"color-${color}-${index}\"\n        class=\"card__color card__color--${color}\"\n        >black</label\n      >`\n    );\n  }).join(`\\n`);\n};\n\n\nexport const createAddTaskTemplate = (taskData) => {\n  const {color, description, dueDate, repeatingDays} = taskData;\n\n  const colorsMarkup = createColorsMarkup(COLORS, color);\n  const repeatingDaysMarkup = createRepeatingDaysMarkup(DAYS, repeatingDays);\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n\n  const isRepeatingTask = Object.values(repeatingDays).some(Boolean);\n  const repeatClass = isRepeatingTask ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  return (\n    `<article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <label>\n              <textarea\n                class=\"card__text\"\n                placeholder=\"Start typing your text here...\"\n                name=\"text\"\n              >${description}</textarea>\n            </label>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <button class=\"card__date-deadline-toggle\" type=\"button\">\n                  date: <span class=\"card__date-status\">${isDateShowing ? `yes` : `no`}</span>\n                </button>\n                \n                ${isDateShowing ? `<fieldset class=\"card__date-deadline\">\n                  <label class=\"card__input-deadline-wrap\">\n                    <input\n                      class=\"card__date\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"date\"\n                      value=\"${date} ${time}\"\n                    />\n                  </label>\n                </fieldset>` : ``}\n\n                <button class=\"card__repeat-toggle\" type=\"button\">\n                  repeat:<span class=\"card__repeat-status\">${isRepeatingTask ? `yes` : `no`}</span>\n                </button>\n\n                ${isRepeatingTask ? `<fieldset class=\"card__repeat-days\">\n                  <div class=\"card__repeat-days-inner\">\n                    ${repeatingDaysMarkup}\n                  </div>\n                </fieldset>` : ``}\n\n              </div>\n            </div>\n\n            <div class=\"card__colors-inner\">\n              <h3 class=\"card__colors-title\">Color</h3>\n              <div class=\"card__colors-wrap\">\n                ${colorsMarkup}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card__status-btns\">\n            <button class=\"card__save\" type=\"submit\">save</button>\n            <button class=\"card__delete\" type=\"button\">delete</button>\n          </div>\n        </div>\n      </form>\n    </article>`\n  );\n};\n","export const createBoardTemplate = () => {\n  return (\n    `<section class=\"board container\">\n        <div class=\"board__filter-list\">\n          <a href=\"#\" class=\"board__filter\">SORT BY DEFAULT</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE up</a>\n          <a href=\"#\" class=\"board__filter\">SORT BY DATE down</a>\n        </div>\n  \n        <div class=\"board__tasks\"></div>\n    </section>`\n  );\n};\n","const renderFilterMurjup = (filters, isChecked) => {\n  const {title, count} = filters;\n  return (\n    `<input type=\"radio\" id=\"filter__${title}\"\n    class=\"filter__input visually-hidden\"\n    name=\"filter\"\n    ${isChecked ? `checked` : ``}\n    ${count === 0 ? `disabled` : ``}\n    />\n    <label for=\"filter__${title}\" class=\"filter__label\"> ${title} <span class=\"filter__${title}-count\"> ${count} </span></label\n    >`\n  );\n};\n\nexport const createMainFiltersTemplate = (filterData) => {\n  const filtersMarkup = filterData.map((it, i) => {\n    return renderFilterMurjup(it, i === 0);\n  }).join(`\\n`);\n\n  return (\n    `<section class=\"main__filter filter container\">\n        ${filtersMarkup}\n    </section>`\n  );\n};\n","export const createLoadButton = () => {\n  return (\n    `<button class=\"load-more\" type=\"button\">load more</button>`\n  );\n};\n","export const createMenuTemplate = () => {\n  return (\n    `<section class=\"control__btn-wrap\">\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__new-task\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n            >+ ADD NEW TASK</label\n          >\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__task\"\n            class=\"control__input visually-hidden\"\n            checked\n          />\n          <label for=\"control__task\" class=\"control__label\">TASKS</label>\n          <input\n            type=\"radio\"\n            name=\"control\"\n            id=\"control__statistic\"\n            class=\"control__input visually-hidden\"\n          />\n          <label for=\"control__statistic\" class=\"control__label\"\n            >STATISTICS</label\n          >\n    </section>`\n  );\n};\n","import {MONTH_NAMES} from '../const';\nimport {formatTime} from '../utils';\n\nexport const createTaskCardTemplate = (taskData) => {\n  const {color, description, isArchive, isFavorite, dueDate, repeatingDays} = taskData;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const archiveButtonInactiveClass = isArchive ? `` : `card__btn--disabled`;\n  const favoriteButtonInactiveClass = isFavorite ? `` : `card__btn--disabled`;\n\n  const repeatClass = Object.values(repeatingDays).some(Boolean) ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  return (\n    `<article class=\"card card--${color} ${repeatClass} ${deadlineClass}\">\n        <div class=\"card__form\">\n          <div class=\"card__inner\">\n            <div class=\"card__control\">\n              <button type=\"button\" class=\"card__btn card__btn--edit\">\n                edit\n              </button>\n              <button type=\"button\" class=\"card__btn card__btn--archive ${archiveButtonInactiveClass}\">\n                archive\n              </button>\n              <button\n                type=\"button\"\n                class=\"card__btn card__btn--favorites ${favoriteButtonInactiveClass}\"\n              >\n                favorites\n              </button>\n            </div>\n\n            <div class=\"card__color-bar\">\n              <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n                <use xlink:href=\"#wave\"></use>\n              </svg>\n            </div>\n\n            <div class=\"card__textarea-wrap\">\n              <p class=\"card__text\">${description}.</p>\n            </div>\n\n            <div class=\"card__settings\">\n              <div class=\"card__details\">\n                <div class=\"card__dates\">\n                  <div class=\"card__date-deadline\">\n                    <p class=\"card__input-deadline-wrap\">\n                      <span class=\"card__date\">${date}</span>\n                      <span class=\"card__time\">${time}</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </article>`\n  );\n};\n","export const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];\r\nexport const DAYS = [`mo`, `tu`, `we`, `th`, `fr`, `sa`, `su`];\r\n\r\nexport const MONTH_NAMES = [\r\n  `January`,\r\n  `February`,\r\n  `March`,\r\n  `April`,\r\n  `May`,\r\n  `June`,\r\n  `July`,\r\n  `August`,\r\n  `September`,\r\n  `October`,\r\n  `November`,\r\n  `December`,\r\n];\r\n","\nimport {createMenuTemplate} from \"./components/menu\";\nimport {createMainFiltersTemplate} from \"./components/filters\";\nimport {createBoardTemplate} from \"./components/board\";\nimport {createAddTaskTemplate} from \"./components/addTask\";\nimport {createTaskCardTemplate} from \"./components/taskCard\";\nimport {createLoadButton} from \"./components/loadButton\";\nimport {filterMock} from \"./mock/filter\";\nimport {taskData} from \"./mock/task\";\n\nlet SHOWING_TASKS_COUNT_ON_START = 8;\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 8;\n\nconst renderElement = (container, template, place = `beforeend`) => {\n  container.insertAdjacentHTML(place, template);\n};\n\nconst main = document.querySelector(`.main`);\nconst mainControl = main.querySelector(`.main__control`);\n\nrenderElement(mainControl, createMenuTemplate());\nrenderElement(main, createMainFiltersTemplate(filterMock));\nrenderElement(main, createBoardTemplate());\n\nconst board = main.querySelector(`.board`);\nconst boardTasks = board.querySelector(`.board__tasks`);\n\nrenderElement(boardTasks, createAddTaskTemplate(taskData[0]));\n\nlet showingTasksCount = SHOWING_TASKS_COUNT_ON_START;\n\n\ntaskData.slice(1, showingTasksCount)\n  .forEach((it) => renderElement(boardTasks, createTaskCardTemplate(it)));\n\nrenderElement(board, createLoadButton());\n\nconst loadMoreButton = main.querySelector(`.load-more`);\n\nloadMoreButton.addEventListener(`click`, () => {\n  const prevTasksCount = showingTasksCount;\n  showingTasksCount = showingTasksCount + SHOWING_TASKS_COUNT_BY_BUTTON;\n\n  taskData.slice(prevTasksCount, showingTasksCount)\n    .forEach((it) => renderElement(boardTasks, createTaskCardTemplate(it)));\n\n  if (showingTasksCount >= taskData.length) {\n    loadMoreButton.remove();\n  }\n});\n","import {taskData} from \"./task\";\r\n\r\nconst filterTitles = [`all`, `overdue`, `today`, `favorites`, `repeating`, `archive`];\r\n\r\nconst taskDataCards = taskData.slice(1);\r\n\r\n\r\nconst counterFilters = {\r\n  all: taskDataCards.length,\r\n  overdue: 0,\r\n  today: 0,\r\n  favorites: 0,\r\n  repeating: 0,\r\n  archive: 0\r\n};\r\n\r\nfor (let i = 0; i < taskDataCards.length; i++) {\r\n  const {isArchive, isFavorite, dueDate, repeatingDays} = taskDataCards[i];\r\n\r\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\r\n  const isToday = dueDate instanceof Date && dueDate.getDate() === new Date().getDate();\r\n  const isRepeat = Object.values(repeatingDays).some(Boolean);\r\n\r\n  counterFilters.overdue += isExpired ? 1 : 0;\r\n  counterFilters.today += isToday ? 1 : 0;\r\n  counterFilters.favorites += isFavorite ? 1 : 0;\r\n  counterFilters.repeating += isRepeat ? 1 : 0;\r\n  counterFilters.archive += isArchive ? 1 : 0;\r\n}\r\n\r\nconst renderMockData = (filters) => {\r\n  return filters.map((it) => {\r\n    return {\r\n      title: it,\r\n      count: counterFilters[it]\r\n    };\r\n  });\r\n};\r\n\r\nexport const filterMock = renderMockData(filterTitles);\r\n\r\n","const TASK_COUNT = 20;\r\n\r\nimport {COLORS} from \"../const\";\r\n\r\nconst DefaultRepeatingDays = {\r\n  \"mo\": false,\r\n  \"tu\": false,\r\n  \"we\": false,\r\n  \"th\": false,\r\n  \"fr\": false,\r\n  \"sa\": false,\r\n  \"su\": false,\r\n};\r\n\r\nconst PropertyDefaultRepeatingDays = Object.keys(DefaultRepeatingDays);\r\n\r\nconst DescriptionItems = [\r\n  `Изучить теорию`,\r\n  `Сделать домашку`,\r\n  `Пройти интенсив на соточку`,\r\n];\r\n\r\nconst getRandomNumber = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst getRandomItem = (arr) => {\r\n  return arr[getRandomNumber(0, arr.length - 1)];\r\n};\r\n\r\nconst getRandomBoolean = () => Math.random() > 0.5;\r\n\r\nconst generateRepeatingDays = () => {\r\n  const randomDay = getRandomItem(PropertyDefaultRepeatingDays);\r\n\r\n  return Object.assign({}, DefaultRepeatingDays, {\r\n    [randomDay]: getRandomBoolean(),\r\n  });\r\n};\r\n\r\nconst getRandomDate = () => {\r\n  const targetDate = new Date();\r\n  const sign = Math.random() > 0.5 ? 1 : -1;\r\n  const diffValue = sign * getRandomNumber(0, 7);\r\n\r\n  targetDate.setDate(targetDate.getDate() + diffValue);\r\n  targetDate.setHours(getRandomNumber(0, 12), getRandomNumber(0, 59));\r\n\r\n  return targetDate;\r\n};\r\n\r\n\r\nconst generateMock = () => {\r\n  const dueDate = Math.random() > 0.5 ? null : getRandomDate();\r\n\r\n  return {\r\n    color: getRandomItem(COLORS),\r\n    description: getRandomItem(DescriptionItems),\r\n    isArchive: getRandomBoolean(),\r\n    isFavorite: getRandomBoolean(),\r\n    dueDate,\r\n    repeatingDays: dueDate ? DefaultRepeatingDays : generateRepeatingDays(),\r\n\r\n  };\r\n};\r\n\r\nconst renderTaskData = (countTask) => {\r\n  return new Array(countTask)\r\n    .fill()\r\n    .map(generateMock);\r\n};\r\n\r\nexport const taskData = renderTaskData(TASK_COUNT);\r\n\r\n\r\n","const castTimeFormat = (value) => {\r\n  return value < 10 ? `0${value}` : String(value);\r\n};\r\n\r\nexport const formatTime = (date) => {\r\n  const hours = castTimeFormat(date.getHours() % 12);\r\n  const minutes = castTimeFormat(date.getMinutes());\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n"],"sourceRoot":""}